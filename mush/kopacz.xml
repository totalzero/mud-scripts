<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on poniedzia³ek, marzec 16, 2020, 10:24  -->
<!-- MuClient version 4.84 -->

<!-- Plugin "kopacz" generated by Plugin Wizard -->

<muclient>
<plugin
   name="kopacz"
   author="totalzero"
   id="afc19ebaf22551bfc99a9917"
   language="Lua"
   purpose="kopacz 2.15"
   date_written="2020-03-16 10:23:13"
   requires="4.84"
   version="1.0"
   >
<description trim="y">
<![CDATA[
skrypt gorniczy przeznaczony dla muda barsawia. Uwaga! uzywac tylko w bezpiecznej kopalni khazad-dum.


co zrobic z dzwiekami?
nalezy je przekopiowac, lub wyciac i wkleic do folderu mush/sounds 
komendy sterujace skryptem:
zdefiniowane aliasy dostarczane wraz z wtyczka
kopacz_on, kopacz_off, kopacz_stan 
kopacz_stan pokazuje zapisane sciany do przekopania, oraz kierunek gdzie bedzie dalej szedl
kopacz_lampa - ustawia obsluge lampy, domyslnie wylaczone - dziala jak przelacznik albo inaczej mowiac radio button
uwaga - lampe wlaczyc przed wlaczeniem kopacza, pamietac zeby miec przy sobie zawsze conajmniej dwie butelki, a we worach wiekszy zapas.
kopacz_idz(n) - idzie do lokacji podanej w nawiasach(n)
np. kopacz_idz(2) - idzie do lokacji 2.
Uwaga - kopacz_idz nie zaczyna samemu kopac, aby rozpoczal kopanie nalezy uzyc komendy kopacz_on
kopacz_odmiejsca(n) - ustawia lokacje na n.
przyklad:
kopacz_odmiejsca(n)
ustawia lokacje (n)
 nastepna lokacja bedzie jako kolejna w tabelce.
np. kopacz_odmiejsca(2) - ustawi sobie kierunek nastepnej lokacji jako e, liczac ze lokacja startowa jest 1, dwa bedzie ta na ne. wiec po uruchomieniu kopania kopacz przejdzie sobie na lokacje 3 (kierunek: e)

kopacz_wylacz - zupelnie wylacza kopacza, jako ze kopacz po przekopaniu calej kopalni nie wylacza sie zupelnie, tylko uruchamia timer aby ponownie rozpoczac kopanie, ta komenda wylacza zupelnie skrypt.

kopacz_wstrzymaj - wstrzymuje kopacza bez resetowania go.

kopacz_wznow - wznawia dzialanie kopacza

kopacz_komendywczytaj - wczytuje komendy ze schowka
format wpisywania komend:
'wez mineral', 'kup se drinka'
komendy nalezy wpisac w dowolnym polu do edycji, zaznaczyc i skopiowac.
kopacz_komendypokaz - pokazuje jakie masz ustawione komendy
kopacz_komendyreset - resetuje liste komend
kopacz_stemple(cyfra) - ustawia branie stempli na cyfra 
kopacz_gagi - wlacza i wylacza gornicze gagi.
]]>
</description>

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   group="lampowe"
   match="*jest pusta*"
   send_to="12"
   sequence="100"
  >
  <send>empty()</send>
  </trigger>
  <trigger
   enabled="y"
   match="*jest zupelnie pusty*"
   send_to="12"
   sequence="100"
  >
  <send>emptybuklak()</send>
  </trigger>
  <trigger
   group="lampowe"
   match="*lampa wypala sie i gasnie*"
   send_to="12"
   sequence="100"
  >
  <send>zgaslo()</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Jestes na to zbyt zmeczony*"
   send_to="12"
   sequence="100"
  >
  <send>czekajon()</send>
  </trigger>
  <trigger
   enabled="y"
   match="*Jestes tak zmeczony, ze nie mozesz isc w tym kierunku*"
   send_to="12"
   sequence="100"
  >
  <send>cofnijsie()</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Jestes zbyt zmeczony by podjac taki wysilek*"
   send_to="12"
   sequence="100"
  >
  <send>czekajon()</send>
  </trigger>
  <trigger
   group="zawalowe"
   match="*Kraaaaach*"
   send_to="12"
   sequence="100"
  >
  <send>zawal()</send>
  </trigger>
  <trigger
   group="zawalowe"
   match="*Krach! Slyszysz glosny huk*"
   send_to="12"
   sequence="100"
  >
  <send>zawal()</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Uderzasz kilofem kruszac wierzchnia warstwe skaly*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Wkladasz kilof w mala szczeline, szybkim ruchem wylamujac kawalek skaly*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="badania"
   match="*Nakluwasz delikatnie powierzchnie sciany, uderzajac w jej wnetrze. Wydobywajacy sie z wnetrza skaly dzwiek sugeruje, iz glebiej moga znajdowac sie bryly cenniejszego kruszcu*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(true)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Kruszysz slabsza skale lekkim wymachem kilofa*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik"
   match="*Nakluwasz delikatnie powierzchnie sciany, uderzajac w jej wnetrze. Wydobywajacy sie z wnetrza skaly dzwiek sugeruje, iz glebiej moga znajdowac sie bryly cenniejszego kruszcu*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(true)</send>
  </trigger>
  <trigger
   group="badania"
   match="*Odczekaj wpierw chwile. Poprzednia czynnosc zbytnio cie zmeczyla*"
   send_to="12"
   sequence="100"
  >
  <send>cofka()</send>
  </trigger>
  <trigger
   group="badania"
   match="*Opukujesz lekko * sciane, wsluchujac sie w dzwiek dochodzacy z wnetrza skaly. Brak metalicznego echa swiadczy, iz w badanym przez ciebie miejscu nie ma godnych uwagi mineralow*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(false)</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Opukujesz lekko * sciane, wsluchujac sie w dzwiek dochodzacy z wnetrza skaly. Brak metalicznego echa swiadczy, iz w badanym przez ciebie miejscu nie ma godnych uwagi mineralow*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(false)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Delikatnie podwazasz maly wystep odrywajac go od sciany*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*zamachu uderzasz sciane, a gruz osypuje sie na ziemie*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Uderzasz lekko o skale, lupiac ja podluznie*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Bierzesz szeroki zamach, z wielkim impetem uderzajac w skale*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Uderzasz mocno rozszczepiajac skale*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="badania"
   match="*Ostukujesz delikatnie * sciane, przykladajac ucho do skaly. Dochodzacy do niego, metaliczny dzwiek mowi ci, ze gdzies tutaj musza byc jakies wartosciowe mineraly*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(true)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Z wielkim wysilkiem rabiesz z calej sily twarda skale*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Uderzasz kilofem, co powoduje osuwanie sie kolejnych partii sciany*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik"
   match="*Ostukujesz delikatnie * sciane, przykladajac ucho do skaly. Dochodzacy do niego, metaliczny dzwiek mowi ci, ze gdzies tutaj musza byc jakies wartosciowe mineraly*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(true)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Ostroznie ostukujesz kilofem sciane*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="badania"
   match="*Ostukujesz delikatnie sciane *, jednakze przytlumione odglosy dochodzace z wnetrza skaly sugeruja ci, iz nie ma w niej zadnego cennego mineralu*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(false)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Ostrzem kilofa rozlupujesz wieksze odlamki skaly*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik"
   match="*Ostukujesz delikatnie sciane *, jednakze przytlumione odglosy dochodzace z wnetrza skaly sugeruja ci, iz nie ma w niej zadnego cennego mineralu*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(false)</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Przejmujace zmeczenie nie pozwala ci dalej kuc*"
   send_to="12"
   sequence="100"
  >
  <send>czekajon()</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Uderzasz kilofem skale, z ktorej odpryskuja male lupki*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Uderzasz lekko kilofem sciane powodujac male osuniecie*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Lekkimi uderzeniami kilofa usuwasz pomniejsze wystepy skalne*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Bierzesz szeroki zamach, z wielkim impetem uderzajac w skale*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Podwazasz wiekszy odlamek, odwalajac go od sciany*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="gornik"
   match="*Przestajesz kuc*"
   send_to="12"
   sequence="100"
  >
  <send>ustaw_kiedykop()</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Unosisz kilof nad glowe, uderzajac z calej sily w skale*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="badania"
   match="*Przesuwasz ostrzem * po powierzchni sciany, wsluchujac sie z powstajacy dzwiek. Delikatne, metaliczne brzmienie daje cien szansy, iz we wnetrzu skaly znajduja sie cenniejsze mineraly*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(true)</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Przesuwasz ostrzem * po powierzchni sciany, wsluchujac sie z powstajacy dzwiek. Delikatne, metaliczne brzmienie daje cien szansy, iz we wnetrzu skaly znajduja sie cenniejsze mineraly*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(true)</send>
  </trigger>
  <trigger
   group="badania"
   match="*Pukasz delikatnie w sciane, wsluchujac sie w stal *. Po chwili wylapujesz cichy, metaliczny dzwiek, sugerujacy ci, iz w skale przed toba moga byc jakies wartosciowe mineraly*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(true)</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Pukasz delikatnie w sciane, wsluchujac sie w stal *. Po chwili wylapujesz cichy, metaliczny dzwiek, sugerujacy ci, iz w skale przed toba moga byc jakies wartosciowe mineraly*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(true)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Rozbijasz spory twor skalny na mniejsze odlamki*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="badania"
   match="*Czy widzisz tam jakas sciane*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(false)</send>
  </trigger>
  <trigger
   enabled="y"
   match="*Stempluj czym*"
   send_to="12"
   sequence="100"
  >
  <send>kopacz_wylacz()</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Koncem kilofa odgarniasz luzne kawalki skaly*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="zawalowe"
   match="*Do twoich uszu dochodzi dzwiek pekniecia*"
   send_to="12"
   sequence="100"
  >
  <send>zawal()</send>
  </trigger>
  <trigger
   group="badania"
   match="*Stukasz mloteczkiem * powierzchnie sciany. Wydobywajacy sie z wnetrza skaly, intensywny dzwiek informuje cie, iz gdzies w poblizu znajduje sie zyla cenniejszego kruszcu.*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(true)</send>
  </trigger>
  <trigger
   group="zawalowe"
   match="*Elementy zabezpieczenia komnaty uginaja sie mocno*"
   send_to="12"
   sequence="100"
  >
  <send>zawal()</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Stukasz mloteczkiem * powierzchnie sciany. Wydobywajacy sie z wnetrza skaly, intensywny dzwiek informuje cie, iz gdzies w poblizu znajduje sie zyla cenniejszego kruszcu.*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(true)</send>
  </trigger>
  <trigger
   group="zawalowe"
   match="*Glosny trzask uswiadamia ci, ze kucie w tej czesci kopalni nie jest juz bezpieczne*"
   send_to="12"
   sequence="100"
  >
  <send>zawal()</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Uderzasz nieco mocniej w sciane *. Po chwili wsluchiwania sie w mdly, monotonny odglos dochodzisz do wniosku, iz w tej skale nie ma cennych mineralow.*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(false)</send>
  </trigger>
  <trigger
   group="zawalowe"
   match="*Jedna z podpor komnaty wyglada niepewnie*"
   send_to="12"
   sequence="100"
  >
  <send>zawal()</send>
  </trigger>
  <trigger
   group="badania"
   match="*Uderzasz nieco mocniej w sciane *. Po chwili wsluchiwania sie w mdly, monotonny odglos dochodzisz do wniosku, iz w tej skale nie ma cennych mineralow.*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(false)</send>
  </trigger>
  <trigger
   group="gornik_gagi"
   match="*Zaciskasz mocniej rece na stylisku kilofa, rytmicznie uderzajac w skale*"
   omit_from_output="y"
   sequence="100"
  >
  </trigger>
  <trigger
   group="badania"
   match="*Wsuwasz dziobek * pomiedzy warstwy skalne sciany, wsluchujac sie w metaliczny dzwiek. Wysokie tony w twych uszach niosa wspaniala wiesc, iz jestes blisko wartosciowszych od gruzu mineralow*"
   send_to="12"
   sequence="100"
  >
  <send>zapamietaj_kierunek(true)</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Wsuwasz dziobek * pomiedzy warstwy skalne sciany, wsluchujac sie w metaliczny dzwiek. Wysokie tony w twych uszach niosa wspaniala wiesc, iz jestes blisko wartosciowszych od gruzu mineralow*"
   send_to="12"
   sequence="100"
  >
  <send>gornik(true)</send>
  </trigger>
  <trigger
   group="gornik"
   match="*Zaczynasz kuc*"
   send_to="12"
   sequence="100"
  >
  <send>gornik_timeron()</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="kopacz_idz(*)"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>idz_do(%1)</send>
  </alias>
  <alias
   match="kopacz_gagi"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>gagi()</send>
  </alias>
  <alias
   match="kopacz_komendypokaz"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>komendy_pokaz()</send>
  </alias>
  <alias
   match="kopacz_komendyreset"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>komendy_reset()</send>
  </alias>
  <alias
   match="kopacz_komendywczytaj"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>komendy_dodaj()</send>
  </alias>
  <alias
   match="kopacz_lampa"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>setlampa()</send>
  </alias>
  <alias
   match="kopacz_odmiejsca(*)"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>kopacz_odmiejsca(%1)</send>
  </alias>
  <alias
   match="kopacz_off"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>kopaczoff()</send>
  </alias>
  <alias
   match="kopacz_on"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>kopaczon()</send>
  </alias>
  <alias
   match="kopacz_stan"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>stan()</send>
  </alias>
  <alias
   match="kopacz_stemple(*)"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>ilestempli(%1)</send>
  </alias>
  <alias
   match="kopacz_wstrzymaj"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>kopacz_wstrzymaj()</send>
  </alias>
  <alias
   match="kopacz_wylacz"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>kopacz_wylacz()</send>
  </alias>
  <alias
   match="kopacz_wznow"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>kopacz_wznow()</send>
  </alias>
</aliases>

<!--  Timers  -->

<timers>
  <timer second="1.00" offset_second="0.00"    send_to="12"
group="kiedykop" >
  <send>kiedykop()</send>

  </timer>
  <timer minute="1" second="0.00" offset_second="0.00"    send_to="12"
group="czekanie" >
  <send>czekajoff()</send>

  </timer>
  <timer second="2.00" offset_second="0.00"    send_to="12"
group="badania" >
  <send>badacz()</send>

  </timer>
  <timer second="10.00" offset_second="0.00"    send_to="12"
group="powracanie" >
  <send>wracam()</send>

  </timer>
  <timer minute="17" second="0.00" offset_second="0.00"    send_to="12"
group="start" >
  <send>ponowny_start()</send>

  </timer>
</timers>

<!--  Script  -->


<script>
<![CDATA[
_gagi_ = false
iloscstempli = "wez 3 stemple"
komendyogolne = {}
powroty = false
t1 = 0
t2 = 0
lampa = false
_gornik_ = false
kopalnia = {"ne", "e", "n", "s", "w", "sw", "nw", "w", "nw", "n", "w", "sw", "d", "w", "e", "u", "ne", "ne", "w", "e", "sw", "e", "e", "e", "s", "n", "nw", "se", "ne", "se", "nw", "ne", "w", "e", "e", "se", "sw", "ne", "e", "w", "n", "s", "se", "d", "s", "w", "e", "s"}
kopalnia_c = 1
powrot = {"n", "n", "u", "nw", "nw", "w", "sw", "sw", "w", "w", "s", "se", "e", "se"}
powrot_c = 1
kierunki = {"n", "ne", "e", "se", "s", "sw", "w", "nw", "nil"}
kierunki_c = 1
kierunki_kopania = {}

gornik_focus = 0

function cofka()
kierunki_c = kierunki_c - 1
end

function badacz()
if kierunki_c < 9 then
b = "zbadaj".." "..kierunki[kierunki_c].." ".."sciane"
Send(b)
kierunki_c = kierunki_c + 1
else
kierunki_c = 1
badaczoff()
ustaw_kiedykop()
end
end

function zapamietaj_kierunek(n)
if n == true then
cc = kierunki_c - 1
table.insert(kierunki_kopania, kierunki[cc])
Note("zapisane")
end
end

function badaczon()
EnableGroup("badania", true)
kierunki_c = 1
Note("badania wlaczone")
end

function badaczoff()
EnableGroup("badania", false)
ResetTimers()
kierunki_c = 1
Note("wylaczone badania")
end

function reset()
kierunki_kopania = {}
Note("kierunki kopania zresetowane")
end

function ustaw_kiedykop()
t1 = os.time()
t2 = t1
t2 = t2 + 2
EnableTimerGroup("kiedykop", true)
end

function kiedykop()
t1 = os.time()
if t1 >= t2 then
if _gornik_ == false then
gornik_on()
else
gornik_sprawdz()
end
EnableTimerGroup("kiedykop", false)
ResetTimers()
end
end

function test(n)
if n == true then
Note(IsTimer("przestankopac"))
elseif n == "s" then
table.insert(kierunki_kopania, n)
else
Note("pentle zakonczylem")
end

end

function gornik(n)
ccc = #kierunki_kopania
if ccc == 0 then
--wylaczam grupe gornik, przechodze do nastepnej lokacji, wlaczam grupe badania
Note("lokacja wykopana")
gornik_off()
else
if n == true then
k = "kuj".." "..kierunki_kopania[gornik_focus].." ".."sciane"
Send(k)
elseif n == false then
kierunki_kopania[gornik_focus] = nil
gornik_sprawdz()
else
gornik_off()
end
end
end

function gornik_sprawdz()
bbb = #kierunki_kopania
gornik_timeroff()
if bbb == 0 then
gornik_off()
else
if lampa == true then
Send("napelnij lampe olejem")
end
gornik_focus = #kierunki_kopania
b = "zbadaj".." "..kierunki_kopania[gornik_focus].." ".."sciane"
Send(b)
end
end

function gornik_on()
EnableGroup("gornik", true)
cbc = #kierunki_kopania
if cbc == 0 then
gornik_off()
else
_gornik_ = true
gornik_focus = #kierunki_kopania
k = "kuj".." "..kierunki_kopania[gornik_focus].." ".."sciane"
Send(k)
Note("gornik wlaczony")
end
end

function gornik_off()
Note("lokacja wykopana, zmieniam miejsce")
gornik_focus = 1
EnableGroup("gornik", false)
gornik_timeroff()
_gornik_ = false
ResetTimers()
if lampa == true then
Send("napelnij lampe olejem")
end
zmianalokacji()
end

function czekajon()
EnableGroup("badania", false)
EnableGroup("gornik", false)
EnableTimerGroup("czekanie", true)
ResetTimers()
Note("odpoczywam")
end

czekando = 0

function czekajoff()
czekando = czekando + 1
if czekando >= 2 then
EnableTimerGroup("czekanie", false)
ResetTimers()
czekando = 0
stempluj()
if _gornik_ == false then
badaczon()
else
EnableGroup("gornik", true)
gornik_sprawdz()
Note("biore sie do pracy")
end
end
end

function kopaczon()
EnableTimerGroup("start", false)
ResetTimers()
EnableGroup("zawalowe", true)
if lampa == true then
EnableTriggerGroup("lampowe", true)
Send("napelnij lampe olejem")
Send("krzesaj iskry krzemieniem o sztylet na lampe")
end
badaczon()
PlaySound(1, "start_script.wav", false, 1, 1)
end

function kopaczoff()
EnableGroup("badania", false)
EnableGroup("gornik", false)
EnableGroup("zawalowe", false)
ResetTimers()
EnableTimerGroup("czekanie", false)
EnableTimerGroup("kiedykop", false)
EnableTimerGroup("powracanie", false)
EnableTimerGroup("gornik_timer", false)
ResetTimers()
reset()
kierunki_c = 1
kopalnia_c = 1
_gornik_ = false
powroty = false
powrot_c = 1
gornik_timeroff()
Note("skrypt gorniczy wylaczony")
end


function stempluj()
Note("procedura stemplowania")
komendy = {"wez 6 stempli", "stempluj stemplem", "stempluj stemplem", "stempluj stemplem", "odloz stemple"}
for _, i in pairs(komendy) do
Send(i)
end
end

function zmianalokacji()
Send("wez blekitnosrebrzyste brylki")
Send("wez diamenty")
Send("wez wory")
Send("wloz mineraly do plecaka")
Send(iloscstempli)
for _, v in pairs(komendyogolne) do
Send(v)
end
if kopalnia_c < 50 then
idzkrok()
else
powroton()
end
end

function idzkrok()
PlaySound(1, "new.wav", false, 0, 0)
komendykrok = {"odloz wory", "opusc czekanik", "wez bulke z worow", "zjedz bulke", "wloz bulki do wora", "napij sie z buklaka", "dobadz czekanika"}
if kopalnia_c < 49 then
Send(kopalnia[kopalnia_c])
stempluj()
for _, f in pairs(komendykrok) do
Send(f)
end
badaczon()
kopalnia_c = kopalnia_c + 1
else
powroton()
end
end


function setlampa()
if lampa == true then
lampa = false
EnableGroup("lampowe", false)
Note("lampa wylaczona")
else
EnableGroup("lampowe", true)
lampa = true
Note("lampa wlaczona")
end
end

function zawal()
EnableGroup("gornik", false)
EnableGroup("badania", false)
gornik_timeroff()
ResetTimers()
Send("przestan kopac")
czekajon()
Note("zawal uwaga")
PlaySound(1, "error.wav", false, 0, 0)
end

function empty()
Send("zniszcz butelke")
Send("wez butelke z worow")
end

function stan()
Note("sciany do wykopania:")
for _, c in pairs(kierunki_kopania) do
Note(c)
end
Note("obecna lokacja:")
Note(kopalnia_c)
Note("po wykopaniu ide na:")
Note(kopalnia[kopalnia_c])
end

function zgaslo()
Send("przestan kuc")
Send("napelnij lampe olejem")
Send("napelnij lampe druga butelka")
Send("krzesaj iskry krzemieniem o sztylet na lampe")
gornik_sprawdz()
end

function powroton()
Send("wez wory")
Send(iloscstempli)
Send("wez diamenty")
Send("wez blekitnosrebrzyste brylki")
Note("uruchamiam procedure powrotu, kopalnia wykopana")
EnableTimerGroup("powracanie", true)
EnableGroup("gornik", false)
EnableGroup("badania", false)
powroty = true
end

function powrotoff()
Note("dotarlem do miejsca startu")
EnableTimerGroup("powracanie", false)
ResetTimers()
kopaczoff()
EnableTimerGroup("start", true)
powroty = false
Send("odloz stemple")
Send("odloz wory")
end

function wracam()
if powrot_c < 15 then
Send(powrot[powrot_c])
powrot_c = powrot_c + 1
else
powrotoff()
end
end

function gornik_timeron()
AddTimer("przestankopac", 0, 2, 0, "przestan kopac", timer_flag.Enabled + timer_flag.OneShot, "")
end

function gornik_timeroff()
DeleteTimer("przestankopac")
end

function kopacz_odmiejsca(miejsce)
kopalnia_c = miejsce
Note("zaczynam od lokacji:")
Note(kopalnia_c)
end

function kopacz_wstrzymaj()
EnableGroup("gornik", false)
EnableGroup("badania", false)
Send("przestan kopac")
Note("kopacz wstrzymany")
end

function idz_do(miejsce)
if miejsce < 1 then
miejsce = 1
end
if miejsce > 50 then
miejsce = 49
end
miejsce = miejsce - 1
for i =1, miejsce, 1 do
Send(kopalnia[i])
end
m = miejsce + 1
kopalnia_c = m
end

startznowu = 0

function ponowny_start()
if startznowu >= 2 then
EnableTimerGroup("start", false)
ResetTimers()
kopaczon()
else
startznowu = startznowu + 1
Send("wez bulke z worow")
Send("zjedz bulke")
Send("wloz bulki do wora")
Send("wez buklak z worow")
Send("napij sie z buklaka")
Send("wloz buklak do wora")
end
end

function kopacz_wylacz()
EnableGroup("lampowe", false)
EnableGroup("gornik", false)
EnableGroup("badania", false)
EnableGroup("zawalowe", false)
EnableTimerGroup("gornik_timer", false)
EnableTimerGroup("start", false)
EnableTimerGroup("kiedykop", false)
EnableTimerGroup("czekanie", false)
EnableTimerGroup("powracanie", false)
ResetTimers()
Send("przestan kopac")
kierunki_kopania = {}
kierunki_c = 1
kopalnia_c = 1
powrot_c = 1
powroty = false
gornik_focus = 0
lampa = false
_gornik_ = false
_gagi_ = false
gornik_timeroff()
Note("skrypt kopacz wylaczony zupelnie i calkowicie zresetowany")
end

function nie_mogekopacon()
EnableGroup("gornik", false)

end

function nie_mogekopacoff()

end



function kopacz_wznow()
abc = #kierunki_kopania
if abc == 0 then
badaczon()
else
gornik_on()
end
end

function emptybuklak()
Send("odloz buklak")
Send("wez buklak z worow")
end

function cofnijsie()
if powroty == true then
powrot_c = powrot_c - 1
else
kopalnia_c = kopalnia_c - 1
end
end


function komendy_dodaj()
schowek = GetClipboard()
calosc = "komendyogolne".." ".."=".." ".."{"..schowek.."}"
f = loadstring(calosc)
f()
Note("komendy zapisane")
end

function komendy_pokaz()
Note("dodales nastepujace komendy:")
for _, v in pairs(komendyogolne) do
Note(v)
end
end

function komendy_reset()
komendyogolne = {}
Note("komendy zresetowane")
end

function ilestempli(n)
if n <= 4 then
iloscstempli = "wez".." "..n.." ".."stemple"
else
iloscstempli = "wez".." "..n.." ".."stempli"
end
Note("branie stempli ustawione na:", n)
end

function komendy_test()
for _, v in pairs(komendyogolne) do
Send(v)
end
end

function szybkitest()
Send(iloscstempli)
end

function gagi()
if _gagi_ == true then
_gagi_ = false
EnableTriggerGroup("gornik_gagi", false)
Note("gornicze gagi wylaczone")
else
_gagi_ = true
EnableTriggerGroup("gornik_gagi", true)
Note("gornicze gagi wlaczone")
end
end
]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="kopacz:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>
